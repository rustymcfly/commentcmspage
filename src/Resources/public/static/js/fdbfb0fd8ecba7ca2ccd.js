"use strict";(window["webpackJsonpPlugincomment-cms-page"]=window["webpackJsonpPlugincomment-cms-page"]||[]).push([[350],{350:function(e,t,r){r.r(t),r.d(t,{default:function(){return m}});let{Data:i}=Shopware,{Criteria:n}=i;var m={template:'\r\n{% block sw_category_detail_entry_point %}\r\n    {% parent %}\r\n\r\n<sw-card\r\n        class="sw-category-comment-card"\r\n        position-identifier="sw-category-comment"\r\n        :title="$tc(\'plugin.RustyMcFly.CommentCmsPage.label\')"\r\n>\r\n    <sw-entity-listing :fullPage="false" :repository="commentRepository" :criteria="commentCriteria" :columns="commentColumns" :items="comments">\r\n        <template #column-emailVerifiedAt="{item}">\r\n            {{ dateFilter(item.emailVerifiedAt) }}\r\n        </template> <template #column-createdAt="{item}">\r\n            {{ dateFilter(item.emailVerifiedAt) }}\r\n        </template>\r\n    </sw-entity-listing>\r\n</sw-card>\r\n{% endblock %}\r\n',data(){return{comments:null}},async created(){this.comments=await this.commentRepository.search(this.commentCriteria)},computed:{dateFilter(){return Shopware.Filter.getByName("date")},commentRepository(){return this.repositoryFactory.create("comment")},commentCriteria(){let e=new n;return e.addFilter(n.equals("categoryId",this.$route.params.id)),e.addFilter(n.not("and",[n.equals("emailVerifiedAt",null)])),e},commentColumns(){return[{property:"firstName",label:this.$t("plugin.RustyMcFly.CommentCmsPage.firstName")},{property:"lastName",label:this.$t("plugin.RustyMcFly.CommentCmsPage.lastName")},{property:"text",label:this.$t("plugin.RustyMcFly.CommentCmsPage.comment")},{property:"active",inlineEdit:"boolean",label:this.$t("plugin.RustyMcFly.CommentCmsPage.active")},{property:"email",label:this.$t("plugin.RustyMcFly.CommentCmsPage.email")},{property:"emailVerifiedAt",label:this.$t("plugin.RustyMcFly.CommentCmsPage.emailVerified")},{property:"createdAt",label:this.$t("plugin.RustyMcFly.CommentCmsPage.createdAt")}]}}}}}]);